{"ast":null,"code":"import { APP_INITIALIZER } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { APP_ROUTES } from './app.routes';\nimport { MicrofrontendService } from './microfrontends/microfrontend.service';\nimport { MdmfSharedModule } from 'projects/mdmf-shared/src/lib/modules/mdmf-shared.module';\nimport { NgxsModule } from '@ngxs/store';\nimport { UserState } from 'projects/mdmf-shared/src/lib/app-state/state/user.state';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ngxs/store\";\nexport function initializeApp(mfService) {\n  return () => mfService.initialise();\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [MicrofrontendService, {\n      provide: APP_INITIALIZER,\n      useFactory: initializeApp,\n      multi: true,\n      deps: [MicrofrontendService]\n    }],\n    imports: [BrowserModule, RouterModule.forRoot(APP_ROUTES), NgxsModule.forRoot([UserState]), MdmfSharedModule]\n  });\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}